from aiogram import Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

async def show_about(message: types.Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é '–û –Ω–∞—Å'"""
    about_text = (
        "‚ÑπÔ∏è *–û –Ω–∞—Å*\n\n"
        "–ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–∞–¥–ø–∏—Å—å\n\n"
        "–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ—É—Ç–±–æ–ª—å–Ω—ã–º–∏ —Ç—É—Ä–Ω–∏—Ä–∞–º–∏ "
        "–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —É–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, "
        "–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç—É—Ä–Ω–∏—Ä–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è–º–∏.\n\n"
        "‚öΩ *–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞:*\n"
        "‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç\n"
        "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Ñ—É—Ç–±–æ–ª—å–Ω—ã—Ö —Ç—É—Ä–Ω–∏—Ä–æ–≤\n"
        "‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–∞–º–∏ (–¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)\n"
        "‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –±–∞–Ω–æ–≤ –∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏\n\n"
        "üìû *–ö–æ–Ω—Ç–∞–∫—Ç—ã:*\n"
        "–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: @admin"
    )
    
    keyboard = InlineKeyboardMarkup()
    back_btn = InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='about_back')
    keyboard.add(back_btn)
    
    await message.answer(about_text, parse_mode="Markdown", reply_markup=keyboard)

async def about_back(callback: types.CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –∏–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ '–û –Ω–∞—Å'"""
    from database import db
    from keyboards import get_main_menu, get_start_keyboard
    
    user_id = callback.from_user.id
    
    if await db.user_exists_by_tg_id(user_id):
        await callback.message.edit_text(
            "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...",
            reply_markup=None
        )
        await callback.message.answer(
            "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
            reply_markup=get_main_menu()
        )
    else:
        await callback.message.edit_text(
            "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –Ω–∞—á–∞–ª–æ...",
            reply_markup=None
        )
        await callback.message.answer(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=get_start_keyboard()
        )
    
    await callback.answer()

def register_handlers_info(dp: Dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"""
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û –Ω–∞—Å"
    dp.register_message_handler(
        show_about, 
        lambda message: message.text == "‚ÑπÔ∏è –û –Ω–∞—Å",
        state="*"
    )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞
    dp.register_callback_query_handler(about_back, lambda c: c.data == 'about_back')