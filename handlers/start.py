from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command

from database import db
from config_bot import config
from keyboards import get_main_menu, get_start_keyboard
import keyboards

async def cmd_start(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await state.finish()
    
    user_id = message.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if await db.user_exists_by_tg_id(user_id):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–±–∞–Ω–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        if await db.is_user_banned(user_id):
            await message.answer(
                "üö´ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!\n\n"
                "–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: @admin",
                reply_markup=types.ReplyKeyboardRemove()
            )
            return
        
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        await message.answer(
            "üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞–∑–∞–¥!\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=get_main_menu()
        )
    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω - –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏–ª–∏ –≤—Ö–æ–¥
        await message.answer(
            "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n\n"
            "–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=get_start_keyboard()
        )

async def cmd_help(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –ø–æ–º–æ—â–∏"""
    help_text = (
        "‚ÑπÔ∏è *–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É:*\n\n"
        "üîê *–í–æ–π—Ç–∏* - –≤—Ö–æ–¥ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∞–∫–∫–∞—É–Ω—Ç\n"
        "üìù *–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è* - —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞\n"
        "üë§ *–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç* - –ø—Ä–æ—Å–º–æ—Ç—Ä –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö\n"
        "‚öΩ *–¢—É—Ä–Ω–∏—Ä—ã* - –ø—Ä–æ—Å–º–æ—Ç—Ä —Ñ—É—Ç–±–æ–ª—å–Ω—ã—Ö —Ç—É—Ä–Ω–∏—Ä–æ–≤ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö)\n"
        "‚ÑπÔ∏è *–û –Ω–∞—Å* - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\n"
        "‚ùì *–ü–æ–º–æ—â—å* - —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"
        "üëë *–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º:*\n"
        "/admin - –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å\n\n"
        "üìû *–ü–æ–¥–¥–µ—Ä–∂–∫–∞:* @admin"
    )
    
    await message.answer(help_text, parse_mode="Markdown")

async def show_profile(message: types.Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"""
    user_id = message.from_user.id
    user_data = await db.get_user_by_id(user_id)
    
    if not user_data:
        await message.answer(
            "‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!\n"
            "–ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ª–∏—á–Ω–æ–º—É –∫–∞–±–∏–Ω–µ—Ç—É.",
            reply_markup=get_start_keyboard()
        )
        return
    
    profile_text = (
        "üë§ *–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:*\n\n"
        f"üîë *–õ–æ–≥–∏–Ω:* `{user_data['username']}`\n"
        f"üìß *Email:* `{user_data['email']}`\n"
        f"üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* `{user_data['phone'] or '–ù–µ —É–∫–∞–∑–∞–Ω'}`\n"
        f"üë®‚Äçüíº *–§–ò–û:* {user_data['full_name']}\n"
        f"üìÖ *–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:* {user_data['registration_date'][:10]}\n"
        f"üïí *–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥:* {user_data['last_login'][:16]}\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:"
    )
    
    await message.answer(profile_text, parse_mode="Markdown", reply_markup=types.ReplyKeyboardRemove())
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:", reply_markup=keyboards.get_profile_keyboard())

def register_handlers_start(dp: Dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
    dp.register_message_handler(cmd_start, Command("start"), state="*")
    dp.register_message_handler(cmd_help, Command("help"))
    dp.register_message_handler(cmd_help, lambda message: message.text == "‚ùì –ü–æ–º–æ—â—å")
    dp.register_message_handler(show_profile, lambda message: message.text == "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")