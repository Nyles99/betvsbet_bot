from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.types import Message, CallbackQuery
from database.db_handler import DatabaseHandler
from keyboards.menu import get_profile_inline_keyboard
from utils.validators import validate_username, validate_full_name
from states.user_states import ProfileStates

async def process_username(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ –ª–æ–≥–∏–Ω–∞"""
    new_username = message.text.strip()
    
    if validate_username(new_username):
        db = DatabaseHandler('users.db')
        user_id = message.from_user.id
        
        if db.update_profile(user_id, username=new_username):
            await message.answer(
                "‚úÖ –õ–æ–≥–∏–Ω —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!",
                reply_markup=types.ReplyKeyboardRemove()
            )
            await message.answer(
                "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=get_profile_inline_keyboard()
            )
        else:
            await message.answer(
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ª–æ–≥–∏–Ω–∞.",
                reply_markup=types.ReplyKeyboardRemove()
            )
    else:
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ª–æ–≥–∏–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ –Ω–∏–∂–Ω–µ–µ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ (3-20 —Å–∏–º–≤–æ–ª–æ–≤)."
        )
        return
    
    await state.finish()

async def process_full_name(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ –§–ò–û"""
    new_full_name = message.text.strip()
    
    if validate_full_name(new_full_name):
        db = DatabaseHandler('users.db')
        user_id = message.from_user.id
        
        if db.update_profile(user_id, full_name=new_full_name):
            await message.answer(
                "‚úÖ –§–ò–û —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!",
                reply_markup=types.ReplyKeyboardRemove()
            )
            await message.answer(
                "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=get_profile_inline_keyboard()
            )
        else:
            await message.answer(
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –§–ò–û.",
                reply_markup=types.ReplyKeyboardRemove()
            )
    else:
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –§–ò–û. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, –ø—Ä–æ–±–µ–ª—ã –∏ –¥–µ—Ñ–∏—Å—ã (2-100 —Å–∏–º–≤–æ–ª–æ–≤)."
        )
        return
    
    await state.finish()

async def cancel_username(callback: CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–æ–≥–∏–Ω–∞"""
    await state.finish()
    await callback.message.edit_text(
        "‚ùå –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ª–æ–≥–∏–Ω–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
        reply_markup=get_profile_inline_keyboard()
    )

async def cancel_full_name(callback: CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –§–ò–û"""
    await state.finish()
    await callback.message.edit_text(
        "‚ùå –ò–∑–º–µ–Ω–µ–Ω–∏–µ –§–ò–û –æ—Ç–º–µ–Ω–µ–Ω–æ.",
        reply_markup=get_profile_inline_keyboard()
    )

def register_profile_handlers(dp: Dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ø—Ä–æ—Ñ–∏–ª—è"""
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è FSM
    dp.register_message_handler(process_username, state=ProfileStates.waiting_for_username)
    dp.register_message_handler(process_full_name, state=ProfileStates.waiting_for_full_name)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—Ç–º–µ–Ω—ã —á–µ—Ä–µ–∑ callback (–∫–Ω–æ–ø–∫–∞ –ù–∞–∑–∞–¥)
    dp.register_callback_query_handler(cancel_username, lambda c: c.data == "main_menu", state=ProfileStates.waiting_for_username)
    dp.register_callback_query_handler(cancel_full_name, lambda c: c.data == "main_menu", state=ProfileStates.waiting_for_full_name)