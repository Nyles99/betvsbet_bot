from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.types import Message, CallbackQuery
from database.db_handler import DatabaseHandler
from keyboards.menu import get_cancel_login_keyboard, get_main_inline_keyboard
from states.user_states import AuthStates
import hashlib

def hash_password(password: str) -> str:
    return hashlib.sha256(password.encode()).hexdigest()

async def start_login(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text("üö™ –í—Ö–æ–¥\n\n–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω:", reply_markup=get_cancel_login_keyboard())
    await AuthStates.waiting_for_username.set()

async def process_username_login(message: Message, state: FSMContext):
    username = message.text.strip()
    db = DatabaseHandler('users.db')
    user = db.get_user_by_username(username)
    
    if not user:
        await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:", reply_markup=get_cancel_login_keyboard())
        return
    
    async with state.proxy() as data:
        data['user_id'] = user.user_id
    
    await message.answer("‚úÖ –õ–æ–≥–∏–Ω –ø—Ä–∏–Ω—è—Ç!\n\n–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:", reply_markup=get_cancel_login_keyboard())
    await AuthStates.waiting_for_password.set()

async def process_password_login(message: Message, state: FSMContext):
    password = message.text.strip()
    
    async with state.proxy() as data:
        user_id = data['user_id']
    
    db = DatabaseHandler('users.db')
    if db.verify_password(user_id, hash_password(password)):
        db.update_last_login(user_id)
        await message.answer("‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω!", reply_markup=types.ReplyKeyboardRemove())
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_main_inline_keyboard())
    else:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:", reply_markup=get_cancel_login_keyboard())
        return
    
    await state.finish()

async def cancel_login(callback: CallbackQuery, state: FSMContext):
    await state.finish()
    await callback.message.edit_text("‚ùå –í—Ö–æ–¥ –æ—Ç–º–µ–Ω–µ–Ω.", reply_markup=types.InlineKeyboardMarkup().add(
        types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="start")
    ))

def register_login_handlers(dp: Dispatcher):
    dp.register_callback_query_handler(start_login, lambda c: c.data == "login", state="*")
    dp.register_message_handler(process_username_login, state=AuthStates.waiting_for_username)
    dp.register_message_handler(process_password_login, state=AuthStates.waiting_for_password)
    dp.register_callback_query_handler(cancel_login, lambda c: c.data == "start", state=AuthStates.all_states)