from aiogram.types import (ReplyKeyboardMarkup, KeyboardButton, 
                          InlineKeyboardMarkup, InlineKeyboardButton)

def get_main_menu():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    
    profile_btn = KeyboardButton('üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç')
    tournaments_btn = KeyboardButton('‚öΩ –¢—É—Ä–Ω–∏—Ä—ã')
    about_btn = KeyboardButton('‚ÑπÔ∏è –û –Ω–∞—Å')
    help_btn = KeyboardButton('‚ùì –ü–æ–º–æ—â—å')
    
    keyboard.add(profile_btn, tournaments_btn)
    keyboard.add(about_btn, help_btn)
    
    return keyboard

def get_start_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    
    login_btn = KeyboardButton('üîê –í–æ–π—Ç–∏')
    register_btn = KeyboardButton('üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
    about_btn = KeyboardButton('‚ÑπÔ∏è –û –Ω–∞—Å')
    help_btn = KeyboardButton('‚ùì –ü–æ–º–æ—â—å')
    
    keyboard.add(login_btn, register_btn)
    keyboard.add(about_btn, help_btn)
    
    return keyboard

def get_registration_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    back_btn = KeyboardButton('üîô –ù–∞–∑–∞–¥')
    keyboard.add(back_btn)
    return keyboard

def get_phone_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    phone_btn = KeyboardButton('üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', request_contact=True)
    back_btn = KeyboardButton('üîô –ù–∞–∑–∞–¥')
    keyboard.add(phone_btn)
    keyboard.add(back_btn)
    return keyboard

def get_profile_keyboard():
    """–ò–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞"""
    keyboard = InlineKeyboardMarkup(row_width=2)
    
    edit_username_btn = InlineKeyboardButton('‚úèÔ∏è –õ–æ–≥–∏–Ω', callback_data='edit_username')
    edit_email_btn = InlineKeyboardButton('‚úèÔ∏è Email', callback_data='edit_email')
    edit_phone_btn = InlineKeyboardButton('‚úèÔ∏è –¢–µ–ª–µ—Ñ–æ–Ω', callback_data='edit_phone')
    edit_name_btn = InlineKeyboardButton('‚úèÔ∏è –§–ò–û', callback_data='edit_name')
    change_password_btn = InlineKeyboardButton('üîë –ü–∞—Ä–æ–ª—å', callback_data='change_password')
    back_btn = InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='back_to_main')
    
    keyboard.add(edit_username_btn, edit_email_btn)
    keyboard.add(edit_phone_btn, edit_name_btn)
    keyboard.add(change_password_btn)
    keyboard.add(back_btn)
    
    return keyboard

def get_tournaments_keyboard(is_admin: bool = False):
    """–ò–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ç—É—Ä–Ω–∏—Ä–æ–≤"""
    keyboard = InlineKeyboardMarkup(row_width=2)
    
    list_btn = InlineKeyboardButton('üìã –°–ø–∏—Å–æ–∫ —Ç—É—Ä–Ω–∏—Ä–æ–≤', callback_data='tournaments_list')
    
    # –ö–Ω–æ–ø–∫–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if is_admin:
        add_btn = InlineKeyboardButton('‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç—É—Ä–Ω–∏—Ä', callback_data='tournament_add')
        manage_btn = InlineKeyboardButton('üõ† –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–∞–º–∏', callback_data='tournaments_manage')
        keyboard.add(add_btn, manage_btn)
    
    back_btn = InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='back_to_main')
    
    keyboard.add(list_btn)
    keyboard.add(back_btn)
    
    return keyboard

def get_tournaments_list_keyboard(tournaments: list, is_admin: bool = False):
    """–ò–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º —Ç—É—Ä–Ω–∏—Ä–æ–≤"""
    keyboard = InlineKeyboardMarkup(row_width=2)
    
    for tournament in tournaments:
        btn = InlineKeyboardButton(
            f"‚öΩ {tournament['name']}", 
            callback_data=f'tournament_matches_{tournament["id"]}'
        )
        keyboard.add(btn)
    
    if is_admin:
        add_btn = InlineKeyboardButton('‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç—É—Ä–Ω–∏—Ä', callback_data='tournament_add')
        manage_btn = InlineKeyboardButton('üõ† –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', callback_data='tournaments_manage')
        keyboard.add(add_btn, manage_btn)
    
    back_btn = InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='tournaments_back')
    keyboard.add(back_btn)
    
    return keyboard

def get_tournament_participation_keyboard(tournament_id: int):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ç—É—Ä–Ω–∏—Ä–µ"""
    keyboard = InlineKeyboardMarkup(row_width=2)
    
    participate_btn = InlineKeyboardButton('‚úÖ –ì–æ—Ç–æ–≤ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å', callback_data=f'participate_{tournament_id}')
    decline_btn = InlineKeyboardButton('‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è', callback_data=f'decline_{tournament_id}')
    
    keyboard.add(participate_btn, decline_btn)
    return keyboard

def get_tournament_matches_keyboard(matches: list, tournament_id: int, is_admin: bool = False):
    """–ò–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –º–∞—Ç—á–µ–π —Ç—É—Ä–Ω–∏—Ä–∞"""
    keyboard = InlineKeyboardMarkup(row_width=1)
    
    for match in matches:
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
        match_date = match['match_date']
        match_time = match['match_time']
        btn_text = f"{match_date} {match_time} {match['team1']} - {match['team2']}"
        
        btn = InlineKeyboardButton(
            btn_text, 
            callback_data=f'match_{match["id"]}'
        )
        keyboard.add(btn)
    
    # –ö–Ω–æ–ø–∫–∞ –ø—Ä–∞–≤–∏–ª —Ç—É—Ä–Ω–∏—Ä–∞
    rules_btn = InlineKeyboardButton('üìã –ü—Ä–∞–≤–∏–ª–∞ —Ç—É—Ä–Ω–∏—Ä–∞', callback_data=f'tournament_rules_{tournament_id}')
    keyboard.add(rules_btn)
    
    # –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ç—á–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if is_admin:
        add_match_btn = InlineKeyboardButton('‚ûï –î–æ–±–∞–≤–∏—Ç—å –º–∞—Ç—á', callback_data=f'add_match_{tournament_id}')
        keyboard.add(add_match_btn)
    
    back_btn = InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='tournaments_back')
    keyboard.add(back_btn)
    
    return keyboard

def get_tournament_rules_keyboard(tournament_id: int, is_admin: bool = False):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–∞–≤–∏–ª —Ç—É—Ä–Ω–∏—Ä–∞"""
    keyboard = InlineKeyboardMarkup(row_width=2)
    
    back_btn = InlineKeyboardButton('üîô –ù–∞–∑–∞–¥ –∫ –º–∞—Ç—á–∞–º', callback_data=f'tournament_matches_{tournament_id}')
    
    if is_admin:
        edit_rules_btn = InlineKeyboardButton('‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞', callback_data=f'edit_rules_{tournament_id}')
        keyboard.add(edit_rules_btn)
    
    keyboard.add(back_btn)
    return keyboard

def get_tournaments_for_matches_keyboard(tournaments: list):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç—É—Ä–Ω–∏—Ä–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –º–∞—Ç—á–∞"""
    keyboard = InlineKeyboardMarkup(row_width=1)
    
    for tournament in tournaments:
        btn = InlineKeyboardButton(
            f"‚öΩ {tournament['name']}", 
            callback_data=f'select_tournament_{tournament["id"]}'
        )
        keyboard.add(btn)
    
    back_btn = InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='matches_back')
    keyboard.add(back_btn)
    
    return keyboard

def get_tournament_manage_keyboard(tournament_id: int):
    """–ò–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º —Ç—É—Ä–Ω–∏—Ä–æ–º"""
    keyboard = InlineKeyboardMarkup(row_width=2)
    
    edit_btn = InlineKeyboardButton('‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', callback_data=f'tournament_edit_{tournament_id}')
    delete_btn = InlineKeyboardButton('üóë –£–¥–∞–ª–∏—Ç—å', callback_data=f'tournament_delete_{tournament_id}')
    matches_btn = InlineKeyboardButton('‚öΩ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ç—á–∞–º–∏', callback_data=f'tournament_matches_{tournament_id}')
    back_btn = InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='tournaments_manage_back')
    
    keyboard.add(edit_btn, delete_btn)
    keyboard.add(matches_btn)
    keyboard.add(back_btn)
    
    return keyboard

def get_tournaments_manage_list_keyboard(tournaments: list):
    """–ò–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ–º–∏ —Ç—É—Ä–Ω–∏—Ä–∞–º–∏"""
    keyboard = InlineKeyboardMarkup(row_width=2)
    
    for tournament in tournaments:
        btn = InlineKeyboardButton(
            f"‚öΩ {tournament['name']}", 
            callback_data=f'tournament_manage_{tournament["id"]}'
        )
        keyboard.add(btn)
    
    add_btn = InlineKeyboardButton('‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç—É—Ä–Ω–∏—Ä', callback_data='tournament_add')
    back_btn = InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='admin_back')
    keyboard.add(add_btn)
    keyboard.add(back_btn)
    
    return keyboard

def get_admin_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    keyboard = InlineKeyboardMarkup(row_width=2)
    
    users_btn = InlineKeyboardButton('üìã –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', callback_data='admin_users_list')
    search_btn = InlineKeyboardButton('üîç –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', callback_data='admin_search_user')
    ban_btn = InlineKeyboardButton('üö´ –ó–∞–±–∞–Ω–∏—Ç—å', callback_data='admin_ban_user')
    unban_btn = InlineKeyboardButton('‚úÖ –†–∞–∑–±–∞–Ω–∏—Ç—å', callback_data='admin_unban_user')
    tournaments_btn = InlineKeyboardButton('‚öΩ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–∞–º–∏', callback_data='admin_tournaments')
    matches_btn = InlineKeyboardButton('‚ûï –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ç—á–∞–º–∏', callback_data='admin_matches')
    stats_btn = InlineKeyboardButton('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data='admin_stats')
    back_btn = InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='admin_back')
    
    keyboard.add(users_btn, search_btn)
    keyboard.add(ban_btn, unban_btn)
    keyboard.add(tournaments_btn, matches_btn)
    keyboard.add(stats_btn)
    keyboard.add(back_btn)
    
    return keyboard

def get_admin_matches_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∞—Ç—á–∞–º–∏ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    keyboard = InlineKeyboardMarkup(row_width=2)
    
    add_match_btn = InlineKeyboardButton('‚ûï –î–æ–±–∞–≤–∏—Ç—å –º–∞—Ç—á', callback_data='admin_add_match')
    view_matches_btn = InlineKeyboardButton('üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –º–∞—Ç—á–µ–π', callback_data='admin_view_matches')
    back_btn = InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='admin_back')
    
    keyboard.add(add_match_btn, view_matches_btn)
    keyboard.add(back_btn)
    
    return keyboard

def get_back_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –ù–∞–∑–∞–¥"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    back_btn = KeyboardButton('üîô –ù–∞–∑–∞–¥')
    keyboard.add(back_btn)
    return keyboard

def get_cancel_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –û—Ç–º–µ–Ω–∞"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    cancel_btn = KeyboardButton('‚ùå –û—Ç–º–µ–Ω–∞')
    keyboard.add(cancel_btn)
    return keyboard

def get_cancel_match_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –û—Ç–º–µ–Ω–∞ –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ç—á–∞"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    cancel_btn = KeyboardButton('‚ùå –û—Ç–º–µ–Ω–∞')
    keyboard.add(cancel_btn)
    return keyboard

def get_confirm_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"""
    keyboard = InlineKeyboardMarkup()
    
    yes_btn = InlineKeyboardButton('‚úÖ –î–∞', callback_data='confirm_yes')
    no_btn = InlineKeyboardButton('‚ùå –ù–µ—Ç', callback_data='confirm_no')
    
    keyboard.add(yes_btn, no_btn)
    return keyboard

def get_user_actions_keyboard(user_id: int, is_banned: bool):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    keyboard = InlineKeyboardMarkup(row_width=2)
    
    if is_banned:
        unban_btn = InlineKeyboardButton('‚úÖ –†–∞–∑–±–∞–Ω–∏—Ç—å', callback_data=f'unban_{user_id}')
        keyboard.add(unban_btn)
    else:
        ban_btn = InlineKeyboardButton('üö´ –ó–∞–±–∞–Ω–∏—Ç—å', callback_data=f'ban_{user_id}')
        keyboard.add(ban_btn)
    
    back_btn = InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='admin_back')
    keyboard.add(back_btn)
    
    return keyboard

def get_tournament_edit_rules_keyboard(tournament_id: int):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∞–≤–∏–ª —Ç—É—Ä–Ω–∏—Ä–∞"""
    keyboard = InlineKeyboardMarkup(row_width=2)
    
    save_btn = InlineKeyboardButton('üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞', callback_data=f'save_rules_{tournament_id}')
    cancel_btn = InlineKeyboardButton('‚ùå –û—Ç–º–µ–Ω–∞', callback_data=f'tournament_rules_{tournament_id}')
    
    keyboard.add(save_btn, cancel_btn)
    return keyboard